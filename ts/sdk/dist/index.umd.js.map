{"version":3,"file":"index.umd.js","sources":["../src/contracts/Transmuter.types.ts","../src/contracts/Transmuter.client.ts","../src/contracts/index.ts"],"sourcesContent":["/**\n* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n* and run the @cosmwasm/ts-codegen generate command to regenerate this file.\n*/\n\nexport type ExecuteMsg = {\n  supply: {\n    [k: string]: unknown;\n  };\n} | {\n  transmute: {\n    [k: string]: unknown;\n  };\n} | {\n  update_admin: {\n    new_admin: string;\n    [k: string]: unknown;\n  };\n} | {\n  withdraw: {\n    coins: Coin[];\n    [k: string]: unknown;\n  };\n};\nexport type Uint128 = string;\nexport interface Coin {\n  amount: Uint128;\n  denom: string;\n  [k: string]: unknown;\n}\nexport interface InstantiateMsg {\n  admin: string;\n  in_denom: string;\n  out_denom: string;\n  [k: string]: unknown;\n}\nexport type QueryMsg = {\n  admin: {\n    [k: string]: unknown;\n  };\n} | {\n  pool: {\n    [k: string]: unknown;\n  };\n};\nexport interface AdminResponse {\n  admin?: string | null;\n}\nexport interface PoolResponse {\n  pool: TransmuterPool;\n}\nexport interface TransmuterPool {\n  in_coin: Coin;\n  out_coin_reserve: Coin;\n}","/**\n* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n* and run the @cosmwasm/ts-codegen generate command to regenerate this file.\n*/\n\nimport { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from \"@cosmjs/cosmwasm-stargate\";\nimport { StdFee } from \"@cosmjs/amino\";\nimport { ExecuteMsg, Uint128, Coin, InstantiateMsg, QueryMsg, AdminResponse, PoolResponse, TransmuterPool } from \"./Transmuter.types\";\nexport interface TransmuterReadOnlyInterface {\n  contractAddress: string;\n  admin: () => Promise<AdminResponse>;\n  pool: () => Promise<PoolResponse>;\n}\nexport class TransmuterQueryClient implements TransmuterReadOnlyInterface {\n  client: CosmWasmClient;\n  contractAddress: string;\n\n  constructor(client: CosmWasmClient, contractAddress: string) {\n    this.client = client;\n    this.contractAddress = contractAddress;\n    this.admin = this.admin.bind(this);\n    this.pool = this.pool.bind(this);\n  }\n\n  admin = async (): Promise<AdminResponse> => {\n    return this.client.queryContractSmart(this.contractAddress, {\n      admin: {}\n    });\n  };\n  pool = async (): Promise<PoolResponse> => {\n    return this.client.queryContractSmart(this.contractAddress, {\n      pool: {}\n    });\n  };\n}\nexport interface TransmuterInterface extends TransmuterReadOnlyInterface {\n  contractAddress: string;\n  sender: string;\n  supply: (fee?: number | StdFee | \"auto\", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;\n  transmute: (fee?: number | StdFee | \"auto\", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;\n  updateAdmin: ({\n    newAdmin\n  }: {\n    newAdmin: string;\n  }, fee?: number | StdFee | \"auto\", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;\n  withdraw: ({\n    coins\n  }: {\n    coins: Coin[];\n  }, fee?: number | StdFee | \"auto\", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;\n}\nexport class TransmuterClient extends TransmuterQueryClient implements TransmuterInterface {\n  client: SigningCosmWasmClient;\n  sender: string;\n  contractAddress: string;\n\n  constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string) {\n    super(client, contractAddress);\n    this.client = client;\n    this.sender = sender;\n    this.contractAddress = contractAddress;\n    this.supply = this.supply.bind(this);\n    this.transmute = this.transmute.bind(this);\n    this.updateAdmin = this.updateAdmin.bind(this);\n    this.withdraw = this.withdraw.bind(this);\n  }\n\n  supply = async (fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      supply: {}\n    }, fee, memo, funds);\n  };\n  transmute = async (fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      transmute: {}\n    }, fee, memo, funds);\n  };\n  updateAdmin = async ({\n    newAdmin\n  }: {\n    newAdmin: string;\n  }, fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      update_admin: {\n        new_admin: newAdmin\n      }\n    }, fee, memo, funds);\n  };\n  withdraw = async ({\n    coins\n  }: {\n    coins: Coin[];\n  }, fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      withdraw: {\n        coins\n      }\n    }, fee, memo, funds);\n  };\n}","/**\n* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n* and run the @cosmwasm/ts-codegen generate command to regenerate this file.\n*/\n\nimport * as _0 from \"./Transmuter.types\";\nimport * as _1 from \"./Transmuter.client\";\nexport namespace contracts {\n  export const Transmuter = { ..._0,\n    ..._1\n  };\n}"],"names":["contracts"],"mappings":"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"}