{"version":3,"file":"index.umd.min.js","sources":["../src/contracts/Transmuter.client.ts","../src/contracts/index.ts"],"sourcesContent":["/**\n* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n* and run the @cosmwasm/ts-codegen generate command to regenerate this file.\n*/\n\nimport { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from \"@cosmjs/cosmwasm-stargate\";\nimport { StdFee } from \"@cosmjs/amino\";\nimport { ExecuteMsg, Uint128, Coin, InstantiateMsg, QueryMsg, AdminResponse, PoolResponse, TransmuterPool } from \"./Transmuter.types\";\nexport interface TransmuterReadOnlyInterface {\n  contractAddress: string;\n  admin: () => Promise<AdminResponse>;\n  pool: () => Promise<PoolResponse>;\n}\nexport class TransmuterQueryClient implements TransmuterReadOnlyInterface {\n  client: CosmWasmClient;\n  contractAddress: string;\n\n  constructor(client: CosmWasmClient, contractAddress: string) {\n    this.client = client;\n    this.contractAddress = contractAddress;\n    this.admin = this.admin.bind(this);\n    this.pool = this.pool.bind(this);\n  }\n\n  admin = async (): Promise<AdminResponse> => {\n    return this.client.queryContractSmart(this.contractAddress, {\n      admin: {}\n    });\n  };\n  pool = async (): Promise<PoolResponse> => {\n    return this.client.queryContractSmart(this.contractAddress, {\n      pool: {}\n    });\n  };\n}\nexport interface TransmuterInterface extends TransmuterReadOnlyInterface {\n  contractAddress: string;\n  sender: string;\n  supply: (fee?: number | StdFee | \"auto\", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;\n  transmute: (fee?: number | StdFee | \"auto\", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;\n  updateAdmin: ({\n    newAdmin\n  }: {\n    newAdmin: string;\n  }, fee?: number | StdFee | \"auto\", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;\n  withdraw: ({\n    coins\n  }: {\n    coins: Coin[];\n  }, fee?: number | StdFee | \"auto\", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;\n}\nexport class TransmuterClient extends TransmuterQueryClient implements TransmuterInterface {\n  client: SigningCosmWasmClient;\n  sender: string;\n  contractAddress: string;\n\n  constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string) {\n    super(client, contractAddress);\n    this.client = client;\n    this.sender = sender;\n    this.contractAddress = contractAddress;\n    this.supply = this.supply.bind(this);\n    this.transmute = this.transmute.bind(this);\n    this.updateAdmin = this.updateAdmin.bind(this);\n    this.withdraw = this.withdraw.bind(this);\n  }\n\n  supply = async (fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      supply: {}\n    }, fee, memo, funds);\n  };\n  transmute = async (fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      transmute: {}\n    }, fee, memo, funds);\n  };\n  updateAdmin = async ({\n    newAdmin\n  }: {\n    newAdmin: string;\n  }, fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      update_admin: {\n        new_admin: newAdmin\n      }\n    }, fee, memo, funds);\n  };\n  withdraw = async ({\n    coins\n  }: {\n    coins: Coin[];\n  }, fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      withdraw: {\n        coins\n      }\n    }, fee, memo, funds);\n  };\n}","/**\n* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n* and run the @cosmwasm/ts-codegen generate command to regenerate this file.\n*/\n\nimport * as _0 from \"./Transmuter.types\";\nimport * as _1 from \"./Transmuter.client\";\nexport namespace contracts {\n  export const Transmuter = { ..._0,\n    ..._1\n  };\n}"],"names":["TransmuterQueryClient","client","contractAddress","_this","this","admin","__awaiter","queryContractSmart","pool","bind","TransmuterClient","_super","sender","call","supply","fee","memo","funds","execute","_a","transmute","updateAdmin","newAdmin","update_admin","new_admin","_b","withdraw","coins","__extends","exports","contracts","Transmuter","__assign","_0","_1"],"mappings":";;;;;+hEAcAA,EAIE,SAAYC,EAAwBC,GAApC,IAKCC,EAAAC,KAEDA,KAAAC,MAAQ,WAAA,OAAAC,EAAAH,OAAA,OAAA,GAAA,sCACN,MAAO,CAAA,EAAAC,KAAKH,OAAOM,mBAAmBH,KAAKF,gBAAiB,CAC1DG,MAAO,CAAE,YAGbD,KAAAI,KAAO,WAAA,OAAAF,EAAAH,OAAA,OAAA,GAAA,sCACL,MAAO,CAAA,EAAAC,KAAKH,OAAOM,mBAAmBH,KAAKF,gBAAiB,CAC1DM,KAAM,CAAE,YAbVJ,KAAKH,OAASA,EACdG,KAAKF,gBAAkBA,EACvBE,KAAKC,MAAQD,KAAKC,MAAMI,KAAKL,MAC7BA,KAAKI,KAAOJ,KAAKI,KAAKC,KAAKL,KAC5B,EA6BHM,EAAA,SAAAC,GAKE,SAAAD,EAAYT,EAA+BW,EAAgBV,GAA3D,IAAAC,EACEQ,EAAME,KAAAT,KAAAH,EAAQC,IAQfE,YAEDD,EAAAW,OAAS,SAAOC,EAAwCC,EAAeC,eAAvD,IAAAF,IAAAA,EAAsC,iFAC7C,KAAA,EAAA,MAAA,CAAA,EAAMX,KAAKH,OAAOiB,QAAQd,KAAKQ,OAAQR,KAAKF,gBAAiB,CAClEY,OAAQ,CAAE,GACTC,EAAKC,EAAMC,IAFd,KAAA,EAAA,MAAA,CAAA,EAAOE,kBAIThB,EAAAiB,UAAY,SAAOL,EAAwCC,EAAeC,eAAvD,IAAAF,IAAAA,EAAsC,iFAChD,KAAA,EAAA,MAAA,CAAA,EAAMX,KAAKH,OAAOiB,QAAQd,KAAKQ,OAAQR,KAAKF,gBAAiB,CAClEkB,UAAW,CAAE,GACZL,EAAKC,EAAMC,IAFd,KAAA,EAAA,MAAA,CAAA,EAAOE,kBAIThB,EAAWkB,YAAG,SAAOF,EAIlBJ,EAAwCC,EAAeC,GAHxD,IAAAK,EAAQH,EAAAG,qBAGP,IAAAP,IAAAA,EAAsC,iFAChC,KAAA,EAAA,MAAA,CAAA,EAAMX,KAAKH,OAAOiB,QAAQd,KAAKQ,OAAQR,KAAKF,gBAAiB,CAClEqB,aAAc,CACZC,UAAWF,IAEZP,EAAKC,EAAMC,IAJd,KAAA,EAAA,MAAA,CAAA,EAAOQ,kBAMTtB,EAAQuB,SAAG,SAAOP,EAIfJ,EAAwCC,EAAeC,GAHxD,IAAAU,EAAKR,EAAAQ,kBAGJ,IAAAZ,IAAAA,EAAsC,iFAChC,KAAA,EAAA,MAAA,CAAA,EAAMX,KAAKH,OAAOiB,QAAQd,KAAKQ,OAAQR,KAAKF,gBAAiB,CAClEwB,SAAU,CACRC,MAAKA,IAENZ,EAAKC,EAAMC,IAJd,KAAA,EAAA,MAAA,CAAA,EAAOQ,kBAnCPtB,EAAKF,OAASA,EACdE,EAAKS,OAASA,EACdT,EAAKD,gBAAkBA,EACvBC,EAAKW,OAASX,EAAKW,OAAOL,KAAKN,GAC/BA,EAAKiB,UAAYjB,EAAKiB,UAAUX,KAAKN,GACrCA,EAAKkB,YAAclB,EAAKkB,YAAYZ,KAAKN,GACzCA,EAAKuB,SAAWvB,EAAKuB,SAASjB,KAAKN,IACpC,CAkCH,0PAhDsCyB,CAAqBlB,EAAAC,GAgD1DD,CAAD,CAhDA,CAAsCV,gFCxCrC6B,EAAAC,eAAA,GAJgBA,EAASA,YAATA,YAIhB,CAAA,IAHcC,WAAkBC,EAAAA,EAAA,CAAA,EAAAC,GAC1BC"}