/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
export type ExecuteMsg = {
    join_pool: {
        [k: string]: unknown;
    };
} | {
    exit_pool: {
        tokens_out: Coin[];
        [k: string]: unknown;
    };
} | {
    swap_exact_amount_in: {
        token_in: Coin;
        token_out_denom: string;
        token_out_min_amount: Uint128;
        [k: string]: unknown;
    };
} | {
    swap_exact_amount_out: {
        token_in_denom: string;
        token_in_max_amount: Uint128;
        token_out: Coin;
        [k: string]: unknown;
    };
};
export type Uint128 = string;
export interface Coin {
    amount: Uint128;
    denom: string;
    [k: string]: unknown;
}
export interface InstantiateMsg {
    pool_asset_denoms: string[];
    [k: string]: unknown;
}
export type QueryMsg = {
    get_shares: {
        address: string;
        [k: string]: unknown;
    };
} | {
    get_swap_fee: {
        [k: string]: unknown;
    };
} | {
    is_active: {
        [k: string]: unknown;
    };
} | {
    get_total_shares: {
        [k: string]: unknown;
    };
} | {
    get_total_pool_liquidity: {
        [k: string]: unknown;
    };
} | {
    spot_price: {
        base_asset_denom: string;
        quote_asset_denom: string;
        [k: string]: unknown;
    };
} | {
    calc_out_amt_given_in: {
        swap_fee: Decimal;
        token_in: Coin;
        token_out_denom: string;
        [k: string]: unknown;
    };
} | {
    calc_in_amt_given_out: {
        swap_fee: Decimal;
        token_in_denom: string;
        token_out: Coin;
        [k: string]: unknown;
    };
};
export type Decimal = string;
export interface AdminResponse {
    admin?: string | null;
}
export interface CalcInAmtGivenOutResponse {
    token_in: Coin;
}
export interface CalcOutAmtGivenInResponse {
    token_out: Coin;
}
export interface GetSharesResponse {
    shares: Uint128;
}
export interface GetSwapFeeResponse {
    swap_fee: Decimal;
}
export interface GetTotalPoolLiquidityResponse {
    total_pool_liquidity: Coin[];
}
export interface GetTotalSharesResponse {
    total_shares: Uint128;
}
export interface IsActiveResponse {
    is_active: boolean;
}
export interface PoolResponse {
    pool: TransmuterPool;
}
export interface TransmuterPool {
    pool_assets: Coin[];
}
export interface SharesResponse {
    shares: Uint128;
}
export interface SpotPriceResponse {
    spot_price: Decimal;
}
//# sourceMappingURL=Transmuter.types.d.ts.map